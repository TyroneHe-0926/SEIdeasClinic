STUDENT SCRIPTS

Sensors.cs
	/// This code is an example solution for the Sensors subsystem.
	/// NOT TO BE SHOWN to the students before they complete their solution.
	
Defence.cs
	/// This code is an example solution for the Defence subsystem.
	/// NOT TO BE SHOWN to the students before they complete their solution.
	
Navigation.cs
	/// This code is an example solution for the Navigation subsystem.
	/// NOT TO BE SHOWN to the students before they complete their solution.

Propulsion.cs
	/// This code is an example solution for the Propulsion subsystem.
	/// NOT TO BE SHOWN to the students before they complete their solution.
	
	
	
	
	
GAME MECHANICS

GameCore.cs
	/// There should be only one game core in the game core scene.
	/// Another gameObject tagged "StarContainer" is also required.
	/// This script controls level loading, winning and losing, as well as spawning in the Player gameObject.
	
GalaxyMapGenerator.cs
	/// This script requires an object tagged "StarContainer" to be present in the game core scene.
	/// One star will be generated for each child object within the StarContainer gameObject.
	/// This allows you to use the Unity Scene editor as a star map designing tool.
	
SmoothCamera.cs
RingPlanetCameraZoom.cs
	/// couple of camera controllers
	
FinalPlanet.cs
	/// game core wins if collided with
LoseIfTouched.cs
	/// game core loses if collided with
	
	
	
	
	
SHIP SCRIPTS

Ship.cs
	/// This script goes on the ship gameObject tagged "Player".
    /// It calls all of the student code and handles the ship's properties.
	
SubsystemReferences.cs
	/// Contains an instance of each of the subsystem classes.
	/// This is how students access eachother's code.
	/// Additionally contains some useful data.
	
ShipSensors.cs
	/// Generates sensor data for the Sensors Subsystem to use.

Turret.cs
	/// This turret fires an instance of the missilePrefab every second from a pool. 
	/// Adjust the fire rate in InvokeRepeating() method.
TurretControls.cs
	/// defines the input for the turret
	/// the Defence subsystem recieves this

Thrusters.cs
	/// Controls the five ship thrusters.
ThrusterControls.cs
	/// defines the input for the thrusters
	/// the Propulsion subsystem recieves this
SideThrusters.cs
	/// creates a handle on a side thruster
	